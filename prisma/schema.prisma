// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource node-template {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  username  String   @unique
  password  String
  firstName String?
  lastName  String?
  isActive  Boolean  @default(true)
  roles     Role[]   @default([user])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relación con tokens de autenticación
  authTokens AuthToken[]

  @@map("users")
}

model AuthToken {
  id        String    @id @default(uuid())
  userId    String
  token     String    @unique
  type      TokenType
  expiresAt DateTime
  createdAt DateTime  @default(now())

  // Relación con usuario
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([token])
  @@index([type])
  @@index([expiresAt])
  @@map("auth_tokens")
}

enum TokenType {
  access
  refresh
}

enum Role {
  admin
  user
  moderator
}
